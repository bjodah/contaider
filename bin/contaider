#!/bin/bash
# -*- mode: shell-script -*-
set -euo pipefail

main () {
    declare -a PODRUN_ARGS

    super_prj_root=$(git rev-parse --show-superproject-working-tree)
    if [[ $super_prj_root != "" ]]; then
        if [[ -d $super_prj_root/.git ]]; then
            PODRUN_ARGS+=(-v $super_prj_root/.git:$super_prj_root/.git)
        else
            >&2 echo "No such git directory in super_prj_root??: $super_prj_root/.git"
        fi
    fi

    if [[ ${CONTAIDER_SIMPLE:-"0"} == "1" ]]; then  # if you don't need any customizations in the Container, you could use this if-branch
        PODRUN_ARGS+=(--image docker.io/paulgauthier/aider-full)
        AIDER_ARGS="${@}"
    else
        CONTAIDER_ENV_PATH="$(cd $(dirname $(realpath "$BASH_SOURCE")); git rev-parse --show-toplevel 2>/dev/null)/share/contaider/env-contaider"
        if [ ! -d "$CONTAIDER_ENV_PATH" ]; then
            CONTAIDER_ENV_PATH=${CONTAIDER_PREFIX:-"$HOME/.local"/share/contaider/env-contaider}
        fi
        if [ ! -e "$CONTAIDER_ENV_PATH"/Containerfile ]; then
            >&2 echo "${BASH_SOURCE}:${BASH_LINENO}: Could not find Containerfile in directory: $CONTAIDER_ENV_PATH"
            exit 1
        fi
        PODRUN_ARGS+=(--cont-img-dir "$CONTAIDER_ENV_PATH")
        PODRUN_ARGS+=(--cont-img-basename contaider) # name of container
        PODRUN_ARGS+=(--entrypoint "env")
        #AIDER_ARGS=(/venv/bin/aider "${@}")
        AIDER_ARGS=(/bin/bash -lc "\". /venv/bin/activate; aider ${@}\"")
    fi

    # https://github.com/Aider-AI/aider/issues/2987#issuecomment-2654396049
    for conf_file in .aider.model.metadata.json .aider.conf.yml .aider.model.settings.yml; do
        if [ -e "$HOME/${conf_file}" ]; then
            PODRUN_ARGS+=(-v "$(realpath $HOME/${conf_file})":/app/${conf_file})  # HOME === /app in container
        fi
    done

    # https://aider.chat/docs/llms/other.html#other-api-key-variables
    declare -a potential_env_vars_to_export
    potential_env_vars_to_export=(ALEPHALPHA_API_KEY ALEPH_ALPHA_API_KEY ANTHROPIC_API_KEY ANYSCALE_API_KEY AZURE_AI_API_KEY AZURE_API_KEY AZURE_OPENAI_API_KEY BASETEN_API_KEY CEREBRAS_API_KEY CLARIFAI_API_KEY CLOUDFLARE_API_KEY CODESTRAL_API_KEY COHERE_API_KEY CO_API_KEY DATABRICKS_API_KEY DEEPINFRA_API_KEY DEEPSEEK_API_KEY FIREWORKSAI_API_KEY FIREWORKS_AI_API_KEY FIREWORKS_API_KEY GEMINI_API_KEY GROQ_API_KEY HUGGINGFACE_API_KEY MARITALK_API_KEY MISTRAL_API_KEY NLP_CLOUD_API_KEY NVIDIA_NIM_API_KEY OLLAMA_API_KEY OPENAI_API_KEY OPENAI_LIKE_API_KEY OPENROUTER_API_KEY OR_API_KEY PALM_API_KEY PERPLEXITYAI_API_KEY PREDIBASE_API_KEY PROVIDER_API_KEY REPLICATE_API_KEY TOGETHERAI_API_KEY VOLCENGINE_API_KEY VOYAGE_API_KEY WATSONX_API_KEY WX_API_KEY XAI_API_KEY XINFERENCE_API_KEY)
    # https://github.com/Aider-AI/aider/issues/949#issuecomment-2621274231
    # https://docs.litellm.ai/docs/providers/litellm_proxy#required-variables
    potential_env_vars_to_export+=(LITELLM_PROXY_API_KEY LITELLM_PROXY_API_BASE)

    potential_env_vars_to_export+=(OPENAI_API_BASE)

    potential_env_vars_to_export+=(
        AIDER_MODEL AIDER_OPENAI_API_KEY AIDER_ANTHROPIC_API_KEY AIDER_OPENAI_API_BASE AIDER_SET_ENV AIDER_API_KEY AIDER_LIST_MODELS AIDER_MODEL_SETTINGS_FILE AIDER_MODEL_METADATA_FILE AIDER_ALIAS AIDER_REASONING_EFFORT AIDER_THINKING_TOKENS AIDER_VERIFY_SSL AIDER_TIMEOUT AIDER_EDIT_FORMAT AIDER_ARCHITECT AIDER_AUTO_ACCEPT_ARCHITECT AIDER_WEAK_MODEL AIDER_EDITOR_MODEL AIDER_EDITOR_EDIT_FORMAT AIDER_SHOW_MODEL_WARNINGS AIDER_CHECK_MODEL_ACCEPTS_SETTINGS AIDER_MAX_CHAT_HISTORY_TOKENS AIDER_CACHE_PROMPTS AIDER_CACHE_KEEPALIVE_PINGS AIDER_MAP_TOKENS AIDER_MAP_REFRESH AIDER_MAP_MULTIPLIER_NO_FILES AIDER_INPUT_HISTORY_FILE AIDER_CHAT_HISTORY_FILE AIDER_RESTORE_CHAT_HISTORY AIDER_LLM_HISTORY_FILE AIDER_DARK_MODE AIDER_LIGHT_MODE AIDER_PRETTY AIDER_STREAM AIDER_USER_INPUT_COLOR AIDER_TOOL_OUTPUT_COLOR AIDER_TOOL_ERROR_COLOR AIDER_TOOL_WARNING_COLOR AIDER_ASSISTANT_OUTPUT_COLOR AIDER_COMPLETION_MENU_COLOR AIDER_COMPLETION_MENU_BG_COLOR AIDER_COMPLETION_MENU_CURRENT_COLOR AIDER_COMPLETION_MENU_CURRENT_BG_COLOR AIDER_CODE_THEME AIDER_SHOW_DIFFS AIDER_GIT AIDER_GITIGNORE AIDER_AIDERIGNORE AIDER_SUBTREE_ONLY AIDER_AUTO_COMMITS AIDER_DIRTY_COMMITS AIDER_ATTRIBUTE_AUTHOR AIDER_ATTRIBUTE_COMMITTER AIDER_ATTRIBUTE_COMMIT_MESSAGE_AUTHOR AIDER_ATTRIBUTE_COMMIT_MESSAGE_COMMITTER AIDER_GIT_COMMIT_VERIFY AIDER_COMMIT AIDER_COMMIT_PROMPT AIDER_DRY_RUN AIDER_SKIP_SANITY_CHECK_REPO AIDER_WATCH_FILES AIDER_LINT AIDER_LINT_CMD AIDER_AUTO_LINT AIDER_TEST_CMD AIDER_AUTO_TEST AIDER_TEST AIDER_ANALYTICS AIDER_ANALYTICS_LOG AIDER_ANALYTICS_DISABLE AIDER_JUST_CHECK_UPDATE AIDER_CHECK_UPDATE AIDER_SHOW_RELEASE_NOTES AIDER_INSTALL_MAIN_BRANCH AIDER_UPGRADE AIDER_MESSAGE AIDER_MESSAGE_FILE AIDER_GUI AIDER_COPY_PASTE AIDER_APPLY AIDER_APPLY_CLIPBOARD_EDITS AIDER_EXIT AIDER_SHOW_REPO_MAP AIDER_SHOW_PROMPTS AIDER_VOICE_FORMAT AIDER_VOICE_LANGUAGE AIDER_VOICE_INPUT_DEVICE AIDER_FILE AIDER_READ AIDER_VIM AIDER_CHAT_LANGUAGE AIDER_YES_ALWAYS AIDER_VERBOSE AIDER_LOAD AIDER_ENCODING AIDER_LINE_ENDINGS AIDER_ENV_FILE AIDER_SUGGEST_SHELL_COMMANDS AIDER_FANCY_INPUT AIDER_MULTILINE AIDER_NOTIFICATIONS AIDER_NOTIFICATIONS_COMMAND AIDER_DETECT_URLS AIDER_EDITOR)


    for env_var_name in "${potential_env_vars_to_export[@]}"; do
        if [[ -v "$env_var_name" ]]; then
            PODRUN_ARGS+=(-e $env_var_name)
        fi
    done

    set -x
    export GIT_AUTHOR_EMAIL="$(git config get user.email)"
    export GIT_USER_NAME="$(git config get user.name) (aider)"
    podrun \
        "${PODRUN_ARGS[@]}" \
        --user $(id -u):$(id -g) \
        --userns keep-id \
        -e LOGNAME \
        -e GIT_AUTHOR_EMAIL \
        -e GIT_USER_NAME \
        -- \
        "${AIDER_ARGS[@]}"
    #    --network=host
}

{
    main "${@}"
    exit 0
}

